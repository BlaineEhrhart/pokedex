{"version":3,"sources":["Home.tsx","PokemonApi.ts","Pokedex.tsx","Pokemon.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Home","className","to","icon","faPowerOff","faCaretLeft","faCaretRight","a","page","limit","maxPokemon","maxLimit","offset","timeout","fetch","id","durationMs","shouldReject","Promise","resolve","reject","setTimeout","Pokedex","screenRef","useRef","useState","isLoading","setIsLoading","nextPage","setNextPage","list","setList","useSearchParams","searchParams","get","Number","useEffect","current","scroll","Math","ceil","getPokemonList","then","response","json","data","status","results","map","p","name","url","replace","ref","style","textAlign","pokemon","i","upperFirst","Pokemon","params","useParams","setName","image","setImage","height","setHeight","weight","setWeight","pokemonId","getPokemon","sprites","front_default","width","src","alt","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2906ed8a.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretLeft, faCaretRight, faPowerOff} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Home() {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"pokedex\">\n                <div className=\"pokedex-screen powered-off\">\n                </div>\n                <div className=\"pokedex-nav\">\n                    <div>\n                        <Link className=\"powered-off\" to=\"/pokedex\"><FontAwesomeIcon icon={faPowerOff}/></Link>\n                    </div>\n                    <div>\n                        <span className=\"button disabled\"><FontAwesomeIcon icon={faCaretLeft}/></span>\n                        <span className=\"button disabled\"><FontAwesomeIcon icon={faCaretRight}/></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","async function getPokemonList(page = 1, limit = 20, maxPokemon = 151) {\n    const offset = (page - 1) * limit;\n    const maxLimit = maxPokemon - offset;\n    if (maxLimit < limit) {\n        limit = maxLimit;\n    }\n\n    await timeout(500);\n\n    return fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`);\n}\n\nasync function getPokemon(id: Number) {\n    await timeout(500);\n\n    return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n}\n\nexport { getPokemonList, getPokemon };\n\n\nfunction timeout(durationMs: number, shouldReject = false) {\n    return new Promise<void>((resolve, reject) =>\n        setTimeout(() => {\n            if (shouldReject) {\n                reject('timeout expired');\n            } else {\n                resolve();\n            }\n        }, durationMs),\n    );\n}\n","import React, {useEffect, useState, useRef} from \"react\";\nimport {Link, useSearchParams} from \"react-router-dom\";\nimport {getPokemonList} from \"./PokemonApi\";\nimport upperFirst from \"lodash.upperfirst\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPowerOff, faCaretRight, faCaretLeft} from '@fortawesome/free-solid-svg-icons';\n\ninterface IPokemon {\n    name: string;\n    url: string;\n    id: string;\n};\n\ninterface IApiPokemon {\n    name: string;\n    url: string;\n};\n\nfunction Pokedex() {\n    // todo: Environment variables in .env file\n    const maxPokemon = 152;\n    const pageLimit = 50;\n    const screenRef = useRef<HTMLInputElement>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [nextPage, setNextPage] = useState(0);\n    const [list, setList] = useState<IPokemon[]>([]);\n    const [searchParams] = useSearchParams();\n    let page = 1;\n    if (searchParams.get(\"page\")) {\n        page = Number(searchParams.get(\"page\"));\n    }\n\n    useEffect(() => {\n        if (screenRef && screenRef.current) {\n            screenRef.current.scroll(0, 0);\n        }\n        setIsLoading(true);\n\n        // Calculate the next page since we want to limit the number of pokemon displayed\n        let nextPage = page + 1;\n        if (nextPage > Math.ceil(maxPokemon / pageLimit)) {\n            nextPage = 0;\n        }\n        setNextPage(nextPage);\n\n        getPokemonList(page, pageLimit, maxPokemon).then(async (response) => {\n            setIsLoading(false);\n            const data = await response.json();\n\n            if (response.status !== 200 || !data) {\n                setList([]);\n                return;\n            }\n\n            const list = data.results.map((p: IApiPokemon) => {\n                return {\n                    name: p.name,\n                    url: p.url,\n                    id: p.url.replace('https://pokeapi.co/api/v2/pokemon/', '').replace('/', '')\n                };\n            })\n\n            setList(list);\n        })\n    }, [page, pageLimit, maxPokemon]);\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"pokedex\">\n                <div className=\"pokedex-screen\" ref={screenRef}>\n                    {isLoading ? <p style={{textAlign: 'center'}}>Loading...</p> : <ul className=\"pokemon-list\">\n                        {list.map((pokemon, i) => <li key={i}><Link\n                            to={`/pokemon/${pokemon.id}`}>{upperFirst(pokemon.name)} (#{pokemon.id})</Link></li>)}\n                    </ul>}\n                </div>\n                <div className=\"pokedex-nav\">\n                    <div>\n                        <Link to=\"/\"><FontAwesomeIcon icon={faPowerOff}/></Link>\n                    </div>\n                    <div>\n                        {(isLoading || page - 1 < 1) ?\n                            <span className=\"button disabled\"><FontAwesomeIcon icon={faCaretLeft}/></span>\n                            : <Link to={`/pokedex?page=${page - 1}`}><FontAwesomeIcon icon={faCaretLeft}/></Link>\n                        }\n                        {(isLoading || nextPage === 0) ?\n                            <span className=\"button disabled\"><FontAwesomeIcon icon={faCaretRight}/></span>\n                            : <Link to={`/pokedex?page=${nextPage}`}><FontAwesomeIcon icon={faCaretRight}/></Link>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Pokedex;\n","import {Link, useParams} from \"react-router-dom\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPowerOff, faCaretRight, faCaretLeft} from '@fortawesome/free-solid-svg-icons';\nimport React, {useEffect, useState} from \"react\";\nimport upperFirst from \"lodash.upperfirst\";\nimport {getPokemon} from \"./PokemonApi\";\n\nfunction Pokemon() {\n    const params = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const [name, setName] = useState('');\n    const [image, setImage] = useState('');\n    const [height, setHeight] = useState(0);\n    const [weight, setWeight] = useState(0);\n\n    let pokemonId = 0;\n    if (params.id) {\n        pokemonId = Number(params.id);\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        getPokemon(pokemonId).then(async (response) => {\n            setIsLoading(false);\n            const data = await response.json();\n\n            if (response.status !== 200 || !data) {\n                return;\n            }\n\n            setName(upperFirst(data.name));\n            setImage(data.sprites.front_default);\n            setHeight(data.height);\n            setWeight(data.weight);\n        });\n\n    }, [pokemonId]);\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"pokedex\">\n                <div className=\"pokedex-screen pokemon\">\n                    {isLoading ? <p>Loading...</p> : <div>\n                        <p><img width=\"96\" height=\"96\" src={image} alt={name} className=\"pokemon-image\" /></p>\n                        <h2>{name} #{pokemonId}</h2>\n                        <p>{height / 10} meters</p>\n                        <p>{weight / 10} kilograms</p>\n                    </div>}\n                </div>\n                <div className=\"pokedex-nav\">\n                    <div>\n                        <Link to=\"/\"><FontAwesomeIcon icon={faPowerOff}/></Link>\n                    </div>\n                    <div>\n                        <Link to=\"/pokedex\"><FontAwesomeIcon icon={faCaretLeft}/></Link>\n                        <span className=\"button disabled\"><FontAwesomeIcon icon={faCaretRight}/></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Pokemon;\n","import './App.scss';\nimport React from \"react\";\nimport {\n    HashRouter,\n    Route,\n    Routes\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Pokemon from \"./Pokemon\";\n\nexport default function App() {\n    return (\n        <HashRouter>\n            <Routes>\n                <Route path=\"/pokemon/:id\" element={<Pokemon />} />\n                <Route path=\"/pokedex\" element={<Pokedex />} />\n                <Route path=\"/\" element={<Home/>} />\n            </Routes>\n        </HashRouter>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}